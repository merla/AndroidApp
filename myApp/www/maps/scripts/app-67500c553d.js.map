{"version":3,"sources":["scripts/app.js"],"names":["angular","module","SearchresultController","$scope","SearchService","$http","$rootScope","$window","pageChangeHandler","pageNumber","jsonp","params","publisher","v","format","callback","q","getJobType","l","getState","sort","radius","st","jt","getCategory","start","limit","fromage","highlight","filter","userip","activate","vm","searchData","getSearchData","publicInterface","this","currentPage","pageSize","mysuccess","response","$broadcast","$on","event","data","extend","$inject","controller","service","setSearchData","result","getStateCode","name","abbreviation","getJobCategory","key","getJobClasstype","setState","resultState","state","setCategory","resultCategory","category","setJobType","resultJobType","jobType","MainController","$timeout","$state","$document","setMarkers","map","image","url","size","google","maps","Size","origin","Point","anchor","shape","coords","type","infowindow","InfoWindow","content","i","beaches","length","beach","marker","Marker","position","lat","lng","icon","title","zIndex","html","addListener","$","ajax","cache","useragent","end","dataType","done","close","finalContent","results","jobtitle","setContent","open","jobClass","statecodes","jobCategories","jobClasstypes","initMap","uluru","Map","document","getElementById","zoom","center","go","runBlock","$log","debug","run","routerConfig","$stateProvider","$urlRouterProvider","templateUrl","controllerAs","otherwise","config","constant","malarkey","moment","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache","put"],"mappings":"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","file":"scripts/app-67500c553d.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('jobPortal', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ngResource', 'ui.router', 'ui.bootstrap', 'toastr','angularUtils.directives.dirPagination']);\n\n})();\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('jobPortal')\r\n    .controller('SearchresultController', SearchresultController);\r\n\r\n \r\n\r\n  /** @ngInject */\r\n  function SearchresultController($scope,SearchService,$http,$rootScope,$window) {\r\n  \r\n  var vm = this;\r\n  var publicInterface;\r\n\r\n  //Pagination variables for initial table.\r\n  vm.currentPage = 1;\r\n  vm.pageSize = 10;\r\n\r\n  activate();\r\n\r\n    //On each pagination click, this method will be called to fetch related data.\r\n    // Indeed rest service is called to fetch data.\r\n   function pageChangeHandler(pageNumber){\r\n        \r\n        $http.jsonp(\"http://api.indeed.com/ads/apisearch?\", {params: {\r\n                    \"publisher\": 5396176379454272,\r\n                    \"v\": \"2\",\r\n                    \"format\": \"json\",\r\n                    \"callback\": \"mysuccess\",\r\n                    \"q\": SearchService.getJobType(),\r\n                    \"l\": SearchService.getState(),\r\n                    \"sort\": \"\",\r\n                    \"radius\": \"\",\r\n                    \"st\": \"\",\r\n                    \"jt\": SearchService.getCategory(),\r\n                    \"start\": pageNumber,\r\n                    \"limit\": \"\",\r\n                    \"fromage\": \"\",\r\n                    \"highlight\": \"1\",\r\n                    \"filter\": \"1\",\r\n                    \"userip\": \"1.2.3.4\"\r\n                }});\r\n    }\r\n\r\n    // Service call callback method to store response in scope.\r\n    $window.mysuccess = function(response){\r\n     $rootScope.$broadcast('refreshData', response);\r\n    }\r\n\r\n     $scope.$on('refreshData', function(event, data){\r\n        vm.searchData = data;\r\n      });\r\n\r\n  function activate() {\r\n     vm.searchData = SearchService.getSearchData();\r\n     }\r\n\r\n     publicInterface = {\r\n        pageChangeHandler: pageChangeHandler\r\n      };\r\n      angular.extend($scope, publicInterface);\r\n  }\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n  /**\r\n   * @ngdoc service\r\n   * @name ijoin.productData\r\n   * @description\r\n   * # productData\r\n   * Service in the ijoin.\r\n   */\r\n  angular.module('jobPortal')\r\n    .service('SearchService', function() {\r\n      var searchData, state, category, jobType;\r\n\r\n      function setSearchData(result){\r\n        searchData = result;\r\n      }\r\n      \r\n     function getSearchData(){\r\n      return searchData;\r\n     } \r\n\r\n     function getStateCode(){\r\n      return [\r\n    {\r\n        \"name\": \"Alabama\",\r\n        \"abbreviation\": \"AL\"\r\n    },\r\n    {\r\n        \"name\": \"Alaska\",\r\n        \"abbreviation\": \"AK\"\r\n    },\r\n    {\r\n        \"name\": \"American Samoa\",\r\n        \"abbreviation\": \"AS\"\r\n    },\r\n    {\r\n        \"name\": \"Arizona\",\r\n        \"abbreviation\": \"AZ\"\r\n    },\r\n    {\r\n        \"name\": \"Arkansas\",\r\n        \"abbreviation\": \"AR\"\r\n    },\r\n    {\r\n        \"name\": \"California\",\r\n        \"abbreviation\": \"CA\"\r\n    },\r\n    {\r\n        \"name\": \"Colorado\",\r\n        \"abbreviation\": \"CO\"\r\n    },\r\n    {\r\n        \"name\": \"Connecticut\",\r\n        \"abbreviation\": \"CT\"\r\n    },\r\n    {\r\n        \"name\": \"Delaware\",\r\n        \"abbreviation\": \"DE\"\r\n    },\r\n    {\r\n        \"name\": \"District Of Columbia\",\r\n        \"abbreviation\": \"DC\"\r\n    },\r\n    {\r\n        \"name\": \"Federated States Of Micronesia\",\r\n        \"abbreviation\": \"FM\"\r\n    },\r\n    {\r\n        \"name\": \"Florida\",\r\n        \"abbreviation\": \"FL\"\r\n    },\r\n    {\r\n        \"name\": \"Georgia\",\r\n        \"abbreviation\": \"GA\"\r\n    },\r\n    {\r\n        \"name\": \"Guam\",\r\n        \"abbreviation\": \"GU\"\r\n    },\r\n    {\r\n        \"name\": \"Hawaii\",\r\n        \"abbreviation\": \"HI\"\r\n    },\r\n    {\r\n        \"name\": \"Idaho\",\r\n        \"abbreviation\": \"ID\"\r\n    },\r\n    {\r\n        \"name\": \"Illinois\",\r\n        \"abbreviation\": \"IL\"\r\n    },\r\n    {\r\n        \"name\": \"Indiana\",\r\n        \"abbreviation\": \"IN\"\r\n    },\r\n    {\r\n        \"name\": \"Iowa\",\r\n        \"abbreviation\": \"IA\"\r\n    },\r\n    {\r\n        \"name\": \"Kansas\",\r\n        \"abbreviation\": \"KS\"\r\n    },\r\n    {\r\n        \"name\": \"Kentucky\",\r\n        \"abbreviation\": \"KY\"\r\n    },\r\n    {\r\n        \"name\": \"Louisiana\",\r\n        \"abbreviation\": \"LA\"\r\n    },\r\n    {\r\n        \"name\": \"Maine\",\r\n        \"abbreviation\": \"ME\"\r\n    },\r\n    {\r\n        \"name\": \"Marshall Islands\",\r\n        \"abbreviation\": \"MH\"\r\n    },\r\n    {\r\n        \"name\": \"Maryland\",\r\n        \"abbreviation\": \"MD\"\r\n    },\r\n    {\r\n        \"name\": \"Massachusetts\",\r\n        \"abbreviation\": \"MA\"\r\n    },\r\n    {\r\n        \"name\": \"Michigan\",\r\n        \"abbreviation\": \"MI\"\r\n    },\r\n    {\r\n        \"name\": \"Minnesota\",\r\n        \"abbreviation\": \"MN\"\r\n    },\r\n    {\r\n        \"name\": \"Mississippi\",\r\n        \"abbreviation\": \"MS\"\r\n    },\r\n    {\r\n        \"name\": \"Missouri\",\r\n        \"abbreviation\": \"MO\"\r\n    },\r\n    {\r\n        \"name\": \"Montana\",\r\n        \"abbreviation\": \"MT\"\r\n    },\r\n    {\r\n        \"name\": \"Nebraska\",\r\n        \"abbreviation\": \"NE\"\r\n    },\r\n    {\r\n        \"name\": \"Nevada\",\r\n        \"abbreviation\": \"NV\"\r\n    },\r\n    {\r\n        \"name\": \"New Hampshire\",\r\n        \"abbreviation\": \"NH\"\r\n    },\r\n    {\r\n        \"name\": \"New Jersey\",\r\n        \"abbreviation\": \"NJ\"\r\n    },\r\n    {\r\n        \"name\": \"New Mexico\",\r\n        \"abbreviation\": \"NM\"\r\n    },\r\n    {\r\n        \"name\": \"New York\",\r\n        \"abbreviation\": \"NY\"\r\n    },\r\n    {\r\n        \"name\": \"North Carolina\",\r\n        \"abbreviation\": \"NC\"\r\n    },\r\n    {\r\n        \"name\": \"North Dakota\",\r\n        \"abbreviation\": \"ND\"\r\n    },\r\n    {\r\n        \"name\": \"Northern Mariana Islands\",\r\n        \"abbreviation\": \"MP\"\r\n    },\r\n    {\r\n        \"name\": \"Ohio\",\r\n        \"abbreviation\": \"OH\"\r\n    },\r\n    {\r\n        \"name\": \"Oklahoma\",\r\n        \"abbreviation\": \"OK\"\r\n    },\r\n    {\r\n        \"name\": \"Oregon\",\r\n        \"abbreviation\": \"OR\"\r\n    },\r\n    {\r\n        \"name\": \"Palau\",\r\n        \"abbreviation\": \"PW\"\r\n    },\r\n    {\r\n        \"name\": \"Pennsylvania\",\r\n        \"abbreviation\": \"PA\"\r\n    },\r\n    {\r\n        \"name\": \"Puerto Rico\",\r\n        \"abbreviation\": \"PR\"\r\n    },\r\n    {\r\n        \"name\": \"Rhode Island\",\r\n        \"abbreviation\": \"RI\"\r\n    },\r\n    {\r\n        \"name\": \"South Carolina\",\r\n        \"abbreviation\": \"SC\"\r\n    },\r\n    {\r\n        \"name\": \"South Dakota\",\r\n        \"abbreviation\": \"SD\"\r\n    },\r\n    {\r\n        \"name\": \"Tennessee\",\r\n        \"abbreviation\": \"TN\"\r\n    },\r\n    {\r\n        \"name\": \"Texas\",\r\n        \"abbreviation\": \"TX\"\r\n    },\r\n    {\r\n        \"name\": \"Utah\",\r\n        \"abbreviation\": \"UT\"\r\n    },\r\n    {\r\n        \"name\": \"Vermont\",\r\n        \"abbreviation\": \"VT\"\r\n    },\r\n    {\r\n        \"name\": \"Virgin Islands\",\r\n        \"abbreviation\": \"VI\"\r\n    },\r\n    {\r\n        \"name\": \"Virginia\",\r\n        \"abbreviation\": \"VA\"\r\n    },\r\n    {\r\n        \"name\": \"Washington\",\r\n        \"abbreviation\": \"WA\"\r\n    },\r\n    {\r\n        \"name\": \"West Virginia\",\r\n        \"abbreviation\": \"WV\"\r\n    },\r\n    {\r\n        \"name\": \"Wisconsin\",\r\n        \"abbreviation\": \"WI\"\r\n    },\r\n    {\r\n        \"name\": \"Wyoming\",\r\n        \"abbreviation\": \"WY\"\r\n    }\r\n];\r\n     }\r\n\r\n     function getJobCategory(){\r\n      return [{\r\n        \"name\": \"FullTime\",\r\n        \"key\": \"fulltime\"\r\n    },\r\n    {\r\n        \"name\": \"PartTime\",\r\n        \"key\": \"parttime\"\r\n    },\r\n    {\r\n        \"name\": \"Contract\",\r\n        \"key\": \"contract\"\r\n    },\r\n    {\r\n        \"name\": \"Internship\",\r\n        \"key\": \"internship\"\r\n    },\r\n    {\r\n        \"name\": \"Temporary\",\r\n        \"key\": \"temporary\"\r\n    }];\r\n     }\r\n\r\n     function getJobClasstype(){\r\n      return [{\r\n        \"name\": \"Software Engineer\",\r\n        \"key\": \"Software Engineer\"\r\n    },\r\n    {\r\n        \"name\": \"Information Technology\",\r\n        \"key\": \"Information Technology\"\r\n    }];\r\n     }\r\n\r\n    function setState(resultState){\r\n        state = resultState;\r\n    }\r\n      \r\n    function getState(){\r\n      return state;\r\n    }\r\n    function setCategory(resultCategory){\r\n        category = resultCategory;\r\n    }\r\n      \r\n    function getCategory(){\r\n      return category;\r\n    } \r\n    function setJobType(resultJobType){\r\n        jobType = resultJobType;\r\n    }\r\n      \r\n    function getJobType(){\r\n      return jobType;\r\n    }  \r\n     \r\n      return {\r\n        setSearchData: setSearchData,\r\n        getSearchData: getSearchData,\r\n        getStateCode: getStateCode,\r\n        getJobCategory: getJobCategory,\r\n        getJobClasstype: getJobClasstype,\r\n        setState: setState,\r\n        getState: getState,\r\n        setCategory: setCategory,\r\n        getCategory: getCategory,\r\n        setJobType: setJobType,\r\n        getJobType: getJobType\r\n        \r\n      };\r\n\r\n\r\n    });\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('jobPortal')\r\n    .controller('MainController', MainController);\r\n\r\n  /** @ngInject */\r\n  function MainController($timeout,SearchService,$scope, $http, $window, $state, $document) {\r\n     var vm = this;\r\n     var publicInterface;\r\n\r\n    // Fetching dropdown box data from serviceses. \r\n    vm.statecodes = SearchService.getStateCode();\r\n    vm.jobCategories = SearchService.getJobCategory();\r\n    vm.jobClasstypes = SearchService.getJobClasstype();\r\n\r\n    //Google map\r\n\r\n    $window.initMap = function() {\r\n        var uluru = {lat: 42.407211, lng: -71.382439};\r\n        var map = new google.maps.Map(document.getElementById('map'), {\r\n          zoom: 10,\r\n          center: uluru\r\n        });\r\n        setMarkers(map);\r\n        }\r\n\r\n      //google.maps.event.addDomListener(window, \"load\", initMap);\r\n\r\nvar beaches = [\r\n        ['New Bedford city', 41.66149, -70.938196, 9, 'New Bedford'],\r\n        ['Cambridge city', 42.375819, -71.118399, 8, 'Cambridge'],\r\n        ['Springfield city', 42.115498, -72.539525, 7, 'Springfield'],\r\n        ['Worcester city', 42.270543, -71.80794, 6, 'Worcester'],\r\n        ['Brookline', 42.324269, -71.140803, 5,'Brookline'],\r\n        ['Boston city', 42.332221, -71.016432, 4,'Boston'],\r\n        ['Framingham', 42.308536, -71.436754, 3,'Framingham'],\r\n        ['Malden city', 42.430474, -71.057637, 2, 'Malden'],\r\n        ['Waltham city', 42.38892, -71.242325, 1, 'Waltham']\r\n        \r\n      ];\r\n\r\n\r\n      function setMarkers(map) {\r\n        // Adds markers to the map.\r\n\r\n        // Marker sizes are expressed as a Size of X,Y where the origin of the image\r\n        // (0,0) is located in the top left of the image.\r\n\r\n        // Origins, anchor positions and coordinates of the marker increase in the X\r\n        // direction to the right and in the Y direction down.\r\n        var image = {\r\n          url: 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png',\r\n          // This marker is 20 pixels wide by 32 pixels high.\r\n          size: new google.maps.Size(20, 32),\r\n          // The origin for this image is (0, 0).\r\n          origin: new google.maps.Point(0, 0),\r\n          // The anchor for this image is the base of the flagpole at (0, 32).\r\n          anchor: new google.maps.Point(0, 32)\r\n        };\r\n        // Shapes define the clickable region of the icon. The type defines an HTML\r\n        // <area> element 'poly' which traces out a polygon as a series of X,Y points.\r\n        // The final coordinate closes the poly by connecting to the first coordinate.\r\n        var shape = {\r\n          coords: [1, 1, 1, 20, 18, 20, 18, 1],\r\n          type: 'poly'\r\n        };\r\n        var infowindow = null;\r\n        infowindow = new google.maps.InfoWindow({\r\n        content: \"holding...\"\r\n        });\r\n        for (var i = 0; i < beaches.length; i++) {\r\n          var beach = beaches[i];\r\n          var marker = new google.maps.Marker({\r\n            position: {lat: beach[1], lng: beach[2]},\r\n            map: map,\r\n            icon: image,\r\n            shape: shape,\r\n            title: beach[0],\r\n            zIndex: beach[3],\r\n            html: beach[4]\r\n          });\r\n\r\n          google.maps.event.addListener(marker, 'click', (function(marker) {\r\n              return function() {\r\n                 $.ajax({\r\n                cache: false,\r\n                data: $.extend({\r\n                publisher: 5396176379454272,\r\n                v: '2',\r\n                format: 'json',\r\n                q: \"Information Technology\",\r\n                l: this.html,\r\n                radius: 50,\r\n                limit: \"\",\r\n                sort: \"\",\r\n                highlight: 1,\r\n                filter: 1,\r\n                userip: '',\r\n                useragent: ''\r\n               }, {\r\n                start: \"1\",\r\n                end: \"10\"\r\n               }),\r\n               dataType: 'jsonp',\r\n               type: 'GET',\r\n               url: 'http://api.indeed.com/ads/apisearch'\r\n               })\r\n               .done(function(data) {\r\n                infowindow.close();\r\n                var finalContent = '<div id=\"content\">';\r\n                for (var i = 0; i < data.results.length; i++) {\r\n                finalContent += \"<p><a href=\"+data.results[i].url+\" target=\\\"_blank\\\" class=\\\"button js-button\\\">\"+data.results[i].jobtitle+\"</a><br>\";\r\n                }\r\n                infowindow.setContent(finalContent);\r\n                infowindow.open(map, marker);\r\n               });\r\n              }\r\n            }) (marker));\r\n          \r\n          }\r\n      }\r\n       \r\n    activate();\r\n\r\n\r\n  // This method will be called on click of any \"GO\" button in landing page\r\n  // In this method \"Indeed\" api called to get the search related data.\r\n    function jobClass(state,category,jobType){\r\n      \r\n    SearchService.setState(state);\r\n    SearchService.setCategory(category);\r\n    SearchService.setJobType(jobType);\r\n    $http.jsonp(\"http://api.indeed.com/ads/apisearch?\", {params: {\r\n                    \"publisher\": 5396176379454272,\r\n                    \"v\": \"2\",\r\n                    \"format\": \"json\",\r\n                    \"callback\": \"mysuccess\",\r\n                    \"q\": jobType,\r\n                    \"l\": state,\r\n                    \"sort\": \"\",\r\n                    \"radius\": \"\",\r\n                    \"st\": \"\",\r\n                    \"jt\": category,\r\n                    \"start\": \"1\",\r\n                    \"limit\": \"\",\r\n                    \"fromage\": \"\",\r\n                    \"highlight\": \"1\",\r\n                    \"filter\": \"1\",\r\n                    \"userip\": \"1.2.3.4\"\r\n                }});\r\n  }\r\n\r\n  // Callback method of above called service and response will be stored in service.\r\n  $window.mysuccess = function(response){\r\n    SearchService.setSearchData(response);\r\n    $state.go('searchresult');\r\n  }\r\n\r\n    function activate() {\r\n     \r\n    }\r\n\r\n     publicInterface = {\r\n        jobClass: jobClass\r\n      };\r\n      angular.extend($scope, publicInterface);\r\n  }\r\n})();\r\n\n(function() {\n  'use strict';\n\n  angular\n    .module('jobPortal')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('jobPortal')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n  function routerConfig($stateProvider, $urlRouterProvider) {\r\n    $stateProvider\r\n      .state('home', {\r\n        url: '/',\r\n        templateUrl: 'app/main/main.html',\r\n        controller: 'MainController',\r\n        controllerAs: 'main'\r\n      }).state('searchresult', {\r\n        url: '/searchresult',\r\n        templateUrl: 'app/searchresult/searchresult.html',\r\n        controller: 'SearchresultController',\r\n        controllerAs: 'searchresult'\r\n      });\r\n\r\n    $urlRouterProvider.otherwise('/');\r\n  }\r\n\r\n})();\r\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('jobPortal')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('jobPortal')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n\n})();\n\nangular.module(\"jobPortal\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<script async defer src=\\\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBT8te8j9AVeOtlr8KMMn_u4sQIElFRV6k&callback=initMap\\\"></script><div class=container><div class=row><div class=\\\"col-sm-4 col-md-4\\\"><div class=thumbnail1><form><div class=\\\"form-group divGap\\\"><div class=col-sm-10><select class=\\\"form-control selectpicker\\\" title=Select id=departmentName ng-options=\\\"jobClasstype.name for jobClasstype in main.jobClasstypes track by jobClasstype.key\\\" ng-model=selectedJobType><option value=\\\"\\\">JOB CLASS</option></select></div><div class=col-sm-2><button type=button class=\\\"btn btn-info\\\" ng-click=\\\"jobClass(selectedCity.abbreviation, selectedCategory.key, selectedJobType.key)\\\">GO</button></div></div><div class=\\\"form-group divGap\\\"><div class=col-sm-10><select class=\\\"form-control selectpicker\\\" title=Select id=departmentName ng-options=\\\"statecode.name for statecode in main.statecodes track by statecode.abbreviation\\\" ng-model=selectedCity><option value=\\\"\\\">JOB STATE</option></select></div><div class=col-sm-2><button type=button class=\\\"btn btn-info\\\" ng-click=\\\"jobClass(selectedCity.abbreviation, selectedCategory.key, selectedJobType.key)\\\">GO</button></div></div><div class=\\\"form-group divGap\\\"><div class=col-sm-10><select class=\\\"form-control selectpicker\\\" title=Select id=departmentName ng-options=\\\"category.name for category in main.jobCategories track by category.key\\\" ng-model=selectedCategory><option value=\\\"\\\">JOB CATEGORY</option></select></div><div class=col-sm-2><button type=button class=\\\"btn btn-info\\\" ng-click=\\\"jobClass(selectedCity.abbreviation, selectedCategory.key, selectedJobType.key)\\\">GO</button></div></div></form></div><div class=thumbnail1></div></div><div class=\\\"col-sm-8 col-md-8\\\"><div class=thumbnail><!--<div svg-map></div> --><!-- <div id=\\\"container\\\" style=\\\"position: relative; width: 750px; height: 500px;\\\"></div>  --><div id=map style=\\\"position: relative; width: 750px; height: 500px\\\"></div></div></div></div></div>\");\n$templateCache.put(\"app/searchresult/searchresult.html\",\"<div class=container><div class=row><div class=col-md-12><div class=\\\"panel panel-default panel-table\\\"><div class=panel-heading><div class=row><div class=\\\"col col-xs-6\\\"><a href=# class=\\\"btn btn-info btn-sm\\\"><span class=\\\"glyphicon glyphicon-home\\\"></span> Home</a><h3 class=panel-title style=text-align:center;float:right>SEARCH RESULTS</h3></div></div></div><div class=panel-body><table class=\\\"table table-inverse\\\" id=jobs><thead><tr><th class=hidden-xs>ID</th><th>JOB TITLE</th><th>COMPANY</th><th>CITY</th><th>STATE</th><th>DATE</th></tr></thead><tbody><!-- <tr ng-repeat=\\\"data in searchData\\\"> --><tr dir-paginate=\\\"data in searchresult.searchData.results|itemsPerPage:searchresult.pageSize\\\" total-items=searchresult.searchData.totalResults current-page=searchresult.currentPage><td class=hidden-xs><a href={{data.url}} target=_blank>{{data.jobkey}}</a></td><td><a href={{data.url}} target=_blank>{{data.jobtitle}}</a></td><td>{{data.company}}</td><td>{{data.city}}</td><td>{{data.state}}</td><td>{{data.date}}</td></tr></tbody></table></div><div ng-controller=SearchresultController><dir-pagination-controls max-size=10 direction-links=true boundary-links=true on-page-change=pageChangeHandler(newPageNumber)></dir-pagination-controls></div></div></div></div></div>\");}]);"],"sourceRoot":"/source/"}